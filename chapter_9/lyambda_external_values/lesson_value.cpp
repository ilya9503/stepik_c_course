/*
    Захват внешних значений в лямбда выражениях

    Через [] можно передавать различные переменные из внешней области видимости, то есть,
        переменные, находящиеся за пределами тела лямбда-функции.
    Этот процесс в С++ называется захват переменных.    

    Первое, что вытекает из необходимости захвата внешних значений, это недоступность переменных,
        объявленных за пределами лямбда-выражения.
        Локальные внешние пременные недоступны
        Глобальные переменные доступны
        [=] сделать доступными все локальные переменные (скопирует в лямбда-функцию)
        [=]() mutable {}
        = - копирует локальные переменные и их нельзя менять
        = + mutable - копирует локальные переменные с возможностью изменения
        Если нужно передать отдельные переменные, пишем их в []
*/

#include <iostream>
 
using std::cout;
using std::cin;
using std::endl;
 
const int max_size = 1000;
 
int main()
{
    int data[] {1, 2, 3, 4, 5, 6, 7, 8};
    size_t sz = sizeof(data)/sizeof(*data);
                                               
    auto r = [sz, data]() mutable {
        cout << sz << endl; 
        for(int x : data)
            cout << x << " ";
        cout << endl; 
    };
 
    r();
 
    return 0;
}