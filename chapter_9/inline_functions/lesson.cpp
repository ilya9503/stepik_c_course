/*
    inline-функции - подставляемые функции

    Если прописать слово inline, то компилятор вместо вызова функции (в стековом фрейме)
        !ВОЗМОЖНО! подставит ее тело, тем самым оптимизируя машинный код
    Вероятность выше, если функция короткая

    На самом деле, довольно часто функции, прописанные в заголовочных файлах, или внутри структур и классов,
    рассматриваются, как inline-функции, так как в заголовках, обычно,
    размещаются или прототипы функций или функции с короткими реализациями,
    а значит, они вполне могут быть преобразованы в inline-функции.
    То же самое и функции внутри классов и структур.

    1. функции с короткими реализациями (телами), прописанными в заголовочных файлах,
        часто рассматриваются компиляторами, как кандидаты в inline-функции
    2. ключевое слово inline, прописанное у функций, рассматривается компилятором лишь как рекомендация
        формирования inline-функции
    3. inline-функция не вызываются, как обычная функция, ее тело просто подставляется (компилятором)
        в места вызовов

*/

#include <iostream>
#include <math.h>
 
using std::cout;
using std::cin;
using std::endl;
 
int sum2(int a, int b)
{
    return a + b;
}

inline bool sqr_root(double a, double b, double c, double& x1, double& x2)
{
    double D = b*b - 4*a*c;
    if(D < 0)
        return false;
    
    x1 = -(b + sqrt(D)) / (2*a);
    x2 = -(b - sqrt(D)) / (2*a);
    return true;
}
 
int main()
{
    int x = 1, y = -5;
    int res = sum2(x, y);

    double a = 0.0, b = 0.0;
    bool res_root = sqr_root(3, 10, 5, a, b);

    if(res_root)
        cout << a << " " << b << endl;
    
    return 0;
}