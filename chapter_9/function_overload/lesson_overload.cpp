/*
    Перегрузка функций
    Когда одному имени функции соответствует несколько реализаций с разными типами входных параметров,
        то такая функция называется перегруженной
    Перегрузка считается, только когда параметры различаются по типу или количеством
        На возвращаемое значение все равно
    Компилятор автоматически выбирает какую функцию вызвать в зависимости от параметров
    Все типы аргументов функции должны быть согласованы
    
    Полиморфизм здесь означает, что одному и тому же имени функции может соответствовать разная реализация
    Перегрузка = статический полиморфизм
    Статический - функция выбирается во время компиляции, а не во время выполнения программы
*/

#include <iostream>

using std::cout;
using std::endl;

int module(int x)   // оригинал
{
    cout << "module(int)" << endl;
    if(x >= -10 && x <= 10)
        return (x > 0) ? x : -x;
    return x;
}
 
double module(double x) // перегрузка module
{
    cout << "module(double)" << endl;
    if(x >= -10 && x <= 10)
        return (x > 0) ? x : -x;
    return x;
}

int main()
{
    double res_1 = module(-0.5);  // modul(double)
    int res_2 = module(-0.5);     // modul(double)
    double res_3 = module(-5);    // modul(int)
    int res_4 = module(-5);       // modul(int)


    return 0;
}