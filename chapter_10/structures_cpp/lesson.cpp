/*
    Структуры в С++, как обновленный тип данных

    Ключевое отличие структур языка С++ - это возможность объявление функций непосредственно внутри структуры
    Такие функции называются методы
    Особенностью методов является прямой доступ к переменным объекта, для которого этот метод был вызван

    this - неявный указатель на объект. С помощью него, метод обращается к локальным переменным своего объекта
    Конечно, неявный указатель this имеет тот же тип, что и текущая структура

    Функции типа static:
        1. Если глобальные, ограничивает область видимости в пределах текущего файла
        2. Если локальные, сохраняет значения переменных между вызовами (FB?)

    Статические методы не связаны с конкретным объектом, а просто являются функцией внутри области видимости структуры
*/
#include <iostream>
#include <math.h>
using std::cout;
using std::endl;

struct point {      // полноценный тип, а не тег структуры
    int x, y;
    double length() { return sqrt(x*x + y*y); }     // функция-член или метод
//    double length() { return sqrt(this->x*this->x + this->y*this->y); }
    static void show_coords() {cout << this->x; }  // ошибка, this не существует
};

int main()
{
//    struct point pt;      // объявление в С
    point pt;               // объявление в С++

    point pt_0 {};              // инициализация нулями
    point pt_1 {1, 2};         // инициализация x=1, y=2
    point pt_2 {3, 4};          // инициализация x=3, y=4

    cout << pt_1.length() << endl;
    cout << pt_2.length() << endl;

    return 0;
}